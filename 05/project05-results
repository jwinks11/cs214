Script started on 2020-03-10 18:40:50-0400
]0;jw63@gold22: ~/214/projects/05/ada[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ada[00m$ cat quadratic.adb
-- quadratic.adb computes the roots of a quadratic equation.
--
-- Input: a, b, c, reals, the coefficients
-- Precondition: a >= 1 and b^2 - 4ac is >= 0
-- Output: The roots of the quadratic equation
--
-- Completed by: Jonathan Winkle
-- Date: 3/10/20
--------------------------------------------------------------

with Ada.Text_IO, Ada.Float_Text_IO, Ada.Strings.Fixed, Ada.Numerics.Elementary_Functions;
use  Ada.Text_IO, Ada.Float_Text_IO, Ada.Strings.Fixed, Ada.Numerics.Elementary_Functions;

procedure quadratic is

   a, b, c, Root_One, Root_Two, arg : float;
   tf : boolean;

   ------------------------------------------------
   --  quadform() computes roots of a quadratic equation.           
   -- Receive: a, b, c, coefficients.        
   -- PRE: a >= 1 and b^2-4ac >= 0
   -- Passback:  Root_One and Root_Two, the roots of the equation
   ------------------------------------------------
   function quadform (a: in float; b: in float; c: in float; Root_One: out float; Root_Two: out float) return boolean is
   begin
    if a /= 0.0 then
        arg := b**2 - (4.0*a*c);
        if arg >= 0.0 then
            Root_One := (-b + Sqrt(arg))/(2.0*a);
            Root_Two := (-b - Sqrt(arg))/(2.0*a);
            return true;
        else
            Put("b^2 - 4ac is negative");
            return false;
        end if;
    else 
        Put("a is zero!");
        return false;
    end if; 
   end quadform; 


begin                                          
   Put("To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: ");
   Get(a);
   Get(b);
   Get(c);

   tf := quadform(a, b, c, Root_One, Root_Two);

   if tf then
    Put("The first root is ");
    Put(Root_One);
    Put(" and the second root is ");
    Put(Root_Two);
   else 
    New_Line;
    Put("Unable to find roots");
    end if;

end quadratic;

]0;jw63@gold22: ~/214/projects/05/ada[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ada[00m$ cat quadratic.adbmv script.java ..script script.java[4Pjava Quadraticc Quadratic.java[2Pcat Quadratic.javamv script.clojure ..script script.clojure[1Pclojure -m quadraticat src/quadratic.clj[1Plojure -m quadraticscript script.clojure[1Pclojure -m quadraticat src/quadratic.clj[4Pmv script.ruby ..script script.ruby[1Pruby quadratic.rb[1Pcat quadratic.rblojure -m quadratic[9P./quadraticgnatmake quadratic.adb[11P./quadraticgnatmake quadratic.adb
x86_64-linux-gnu-gcc-7 -c quadratic.adb
x86_64-linux-gnu-gnatbind-7 -x quadratic.ali
x86_64-linux-gnu-gnatlink-7 quadratic.ali
]0;jw63@gold22: ~/214/projects/05/ada[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ada[00m$ gnatmake quadratic.adb[5Pcat quadratic.adbmv script.java ..script script.java[4Pjava Quadraticc Quadratic.java[2Pcat Quadratic.javamv script.clojure ..script script.clojure[1Pclojure -m quadraticat src/quadratic.clj[1Plojure -m quadraticscript script.clojure[1Pclojure -m quadraticat src/quadratic.clj[4Pmv script.ruby ..script script.ruby[1Pruby quadratic.rb[1Pcat quadratic.rblojure -m quadratic[9P./quadraticgnatmake quadratic.adb[11P./quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 0
1
2
a is zero!
Unable to find roots
]0;jw63@gold22: ~/214/projects/05/ada[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ada[00m$ ./quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 9
1
9
b^2 - 4ac is negative
Unable to find roots
]0;jw63@gold22: ~/214/projects/05/ada[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ada[00m$ ./quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 1
-3
-10
The first root is  5.00000E+00 and the second root is -2.00000E+00
]0;jw63@gold22: ~/214/projects/05/ada[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ada[00m$ ./quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 1
-18
45
The first root is  1.50000E+01 and the second root is  3.00000E+00
]0;jw63@gold22: ~/214/projects/05/ada[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ada[00m$ exit

Script done on 2020-03-10 18:42:18-0400
Script started on 2020-03-10 18:38:30-0400
]0;jw63@gold22: ~/214/projects/05/clojure[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/clojure[00m$ cat src/quadratic.clj
;;;; quadratic.clj computes the roots of a quadratic equation
;;;;
;;;; Completed by: Jonathan Winkle
;;;; Date: 3/10/20
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns quadratic)      ; name the program

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; quadform() computes the roots of a quadratic equation
;;; Receive: a, b, c, the coefficients         
;;; PRE: a >= 1 and b^2 - 4ac >= 0
;;; Return: a vector containing the two roots of the equation, or false
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defn quadform [a, b, c]
    (if (not= a 0.0)
        (let [arg (- (Math/pow b 2.0) (* 4.0 (* a c)))]
            (if (>= arg 0.0)
                (do
                    (let 
                        [root1 (/ (+(- b) (Math/sqrt arg)) (* 2.0 a))
                         root2 (/ (-(- b) (Math/sqrt arg)) (* 2.0 a))]
                        (vector root1 root2)))  
            (do
                (printf (str "\nb^2 - 4ac is negative!")) 
                false)
            )   
        )
    (do 
        (printf (str "\na is zero!")) 
        false))
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; main function
;;; Input: the coefficients a, b, and c
;;; Output: the roots of the quadratic equation.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
  (print "To compute the roots of a quadratic formula in the form y = ax^2 + bx + c,\n enter a, b, and c: ") (flush)
  (let
    [ a (double(read)) 
      b (double(read))
      c (double(read))
    ]

    (let 
        [result (quadform a b c)
         root1 (get result 0)
         root2 (get result 1)
        ]
        (if (not= result false) 
            (printf "\nThe roots are %f and %f\n"
                root1 root2)
        (printf "\nUnable to compute roots\n")
        )
    )
    )
)


]0;jw63@gold22: ~/214/projects/05/clojure[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/clojure[00m$ cat src/quadratic.clj[1Plojure -m quadraticscript script.clojure[1Pclojure -m quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c,
 enter a, b, and c: 0
1
2

a is zero!
Unable to compute roots
]0;jw63@gold22: ~/214/projects/05/clojure[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/clojure[00m$ clojure -m quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c,
 enter a, b, and c: 9
1
9

b^2 - 4ac is negative!
Unable to compute roots
]0;jw63@gold22: ~/214/projects/05/clojure[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/clojure[00m$ clojure -m quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c,
 enter a, b, and c: 1
-3
-10

The roots are 5.000000 and -2.000000
]0;jw63@gold22: ~/214/projects/05/clojure[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/clojure[00m$ clojure -m quadratic
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c,
 enter a, b, and c: 1
-18
45

The roots are 15.000000 and 3.000000
]0;jw63@gold22: ~/214/projects/05/clojure[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/clojure[00m$ exit

Script done on 2020-03-10 18:39:15-0400
Script started on 2020-03-10 18:39:43-0400
]0;jw63@gold22: ~/214/projects/05/java[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/java[00m$ cat Quadratic.java
/* Quadratic.java computes the roots of a quadratic equation
 * Completed by: Jonathan Winkle
 * 3/10/20
 ***************************************************************/

import java.util.Scanner;
import java.lang.Math;

// java class Quadratic
public class Quadratic
{
  // main program
  public static void main(String[] args)
    {
      Scanner keyboard = new Scanner(System.in);
      // prompt for the string
      System.out.println("\nTo compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: ");
      double a = keyboard.nextDouble();
      double b = keyboard.nextDouble();
      double c = keyboard.nextDouble();
      
      //Create list, compute results and print
      double [] resultList = new double[2];
      
      if (quadraticRoots(a, b, c, resultList)) {
        System.out.println("\nThe first root is " + resultList[0] + "\n and the second root is " + resultList[1]);
      } else {
        System.out.println("\nUnable to find roots");
      }
    }
  
  /* quadraticRoots() computes the roots of a quadratic equation
   * Receive: 	a, b, c,
   *            results - an array of doubles in which to place roots
   * Return: true if roots are valid, false if not valid
   *****************************************************/
  public static boolean quadraticRoots(double a, double b, double c, double[] results)
  {
    if (a != 0) {
        double arg = Math.pow(b, 2.0) - (4 * a * c);
        if (arg >= 0) {
            results[0] = (-b + Math.sqrt(arg))/(2*a);
            results[1] = (-b - Math.sqrt(arg))/(2*a);
            return true;
        } else {
            System.out.println("\nb^2 - 4ac is negative!");
            return false;
        }
    } else {
        System.out.println("\na is zero!");
        return false;
    }
  } 


}]0;jw63@gold22: ~/214/projects/05/java[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/java[00m$ javaC c Quadratic.java
]0;jw63@gold22: ~/214/projects/05/java[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/java[00m$ java Quadratic

To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 
0
1
2

a is zero!

Unable to find roots
]0;jw63@gold22: ~/214/projects/05/java[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/java[00m$ java Quadratic

To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 
9
1
9

b^2 - 4ac is negative!

Unable to find roots
]0;jw63@gold22: ~/214/projects/05/java[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/java[00m$ java Quadratic

To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 
1
-3
-10

The first root is 5.0
 and the second root is -2.0
]0;jw63@gold22: ~/214/projects/05/java[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/java[00m$ java Quadratic

To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 
1
-18
45

The first root is 15.0
 and the second root is 3.0
]0;jw63@gold22: ~/214/projects/05/java[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/java[00m$ exit

Script done on 2020-03-10 18:40:33-0400
Script started on 2020-03-10 18:28:07-0400
]0;jw63@gold22: ~/214/projects/05/ruby[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ruby[00m$ cat quadratic.rb
# quadratic.rb computes the roots of a quadratic equation.
#
# Completed by: Jonathan Winkle
# Date: 3/10/20
#################################################################


# quadform() computes the roots of a quadratic equation.
# Receive: a, b, c, the coefficients, vec                 
# PRE: a >= 1, b^2 - 4ac >= 0
# Return: true if the roots are valid, false if not
######################################################

def quadform (a, b, c, vec)
    if a != 0 then 
        arg = b**2 - (4*a*c)
        if arg >= 0 then
            vec[0] = (-b + Math.sqrt(arg))/(2*a)
            vec[1] = (-b - Math.sqrt(arg))/(2*a)
            true
        else
            puts "b^2 - 4ac is negative!"
            false
        end
    else
        puts "a is zero!"
        false
    end
  end
  
  
  def main
    print "To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: "; 
    a = gets.to_f 
    b = gets.to_f
    c = gets.to_f
    results = Array.new(2)
    if quadform(a, b, c, results) then
        puts "The first root is: " << results[0].to_s
        puts "the second root is: " << results[1].to_s
    else
        puts "Unable to compute the roots"
    end
  end

  main]0;jw63@gold22: ~/214/projects/05/ruby[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ruby[00m$ cat quadratic.rblojure -m quadratic[9P./quadratic[9@clojure -m quadratic[4Pat quadratic.rb[Kf ruby quadratic.rb
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 0
1
2
a is zero!
Unable to compute the roots
]0;jw63@gold22: ~/214/projects/05/ruby[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ruby[00m$ ruby quadratic.rb
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 9
1
9
b^2 - 4ac is negative!
Unable to compute the roots
]0;jw63@gold22: ~/214/projects/05/ruby[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ruby[00m$ ruby quadratic.rb
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 1
-3
-10
The first root is: 5.0
the second root is: -2.0
]0;jw63@gold22: ~/214/projects/05/ruby[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ruby[00m$ ruby quadratic.rb
To compute the roots of a quadratic formula in the form y = ax^2 + bx + c, enter a, b, and c: 1
-18
45
The first root is: 15.0
the second root is: 3.0
]0;jw63@gold22: ~/214/projects/05/ruby[01;32mjw63@gold22[00m:[01;34m~/214/projects/05/ruby[00m$ exit

Script done on 2020-03-10 18:29:23-0400
